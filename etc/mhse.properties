### syntax: applicationName.propertyName
### ex: minhash.algorithmName
### MinHash ###
# suggested number of threads to use
test.minhash.suggestedNumberOfThreads=-1
# graph input file path
test.minhash.inputFilePath=/test/path/to/input/graph
# result output folder path
test.minhash.outputFolderPath=
# if true, the input graph is the transpose version
test.minhash.transpose=False
# if true is set, keep the isolated nodes
test.minhash.isolatedVertices=False
# warning: if false is set, you must set minhash.inputFilePathSeedNode or minhash.nodeIDRange
test.minhash.isSeedsRandom=False
# to have a list of acceptable names see class it.bigdatalab.algorithm.AlgorithmEnum
test.minhash.algorithmName=MHSE
# threshold for effective diameter
test.minhash.threshold=0.9
# minhash direction of the messages. in or out
test.minhash.direction=in
# number of seeds used for minhash algorithm
test.minhash.numSeeds=256
# optional
# warning: automatically reset numSeeds property (replaced with length of nodeIDRange)
test.minhash.nodeIDRange=
# optional
# read seeds list and nodes list from an external json file at this path
test.minhash.inputFilePathSeedNode=
#### Properties for multiple tests ###
# number of test to be done, 1 is the default value
test.minhash.numTests=10
# if true load graph in memory
test.minhash.inMemory=True
### EdgeList2WebGraph ###
test.edgeList2WebGraph.inputEdgelistFilePath=/test/path/to/input/edgelist
test.edgeList2WebGraph.outputFolderPath=/test/path/to/output/folder/webgraph
test.edgeList2WebGraph.fromJanusGraph=False
### WebGraph2EdgeList ###
test.webGraph2EdgeList.inputFilePath=/test/path/to/input/graph
test.webGraph2EdgeList.outputFolderPath=/test/output/folder/path
### GroundTruths ###
# graph input file path
test.groundTruth.inputFilePath=/test/path/to/input/graph
# result output folder path
test.groundTruth.outputFilePath=/test/output/folder/path
# number of threads to use
test.groundTruth.threadNumber=4
# if true is set, keep the isolated nodes
test.groundTruth.isolatedVertices=
# if true load graph in memory
test.groundTruth.inMemory=True
### Seeds ###
# number of seeds to generate
test.seed.numSeeds=8
# optional
# graph input file path
test.seed.inputFilePath=/test/path/to/input/graph
# result output folder path
test.seed.outFolderPath=/test/output/folder/path
# number of seeds list to generate
test.seed.numTest=2
# if false is set, keep the isolated nodes
test.seed.isolatedVertices=False
# if true load graph in memory
test.seed.inMemory=True